{"version":3,"file":"static/js/517.9754e026.chunk.js","mappings":"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","sources":["components/Recommend/index.js","components/ArticleCard/index.js","page/home/index.js","utils/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Divider } from 'antd';\nimport { FireTwoTone, EyeTwoTone } from '@ant-design/icons';\n\nimport './index.less'\n/**\n * 推荐文章\n*/\nfunction Recommend(props) {\n    const [listData, setData] = useState([])\n    const navigate = useNavigate();\n    useEffect(() => {\n        setData(props.articleList);\n    }, [props.articleList])\n\n    return (\n        <Card style={{ margin: '16px auto' }}>\n            <div className='re-card'>\n                <div className='re-title'>热门文章<span style={{marginLeft: '7px'}}><FireTwoTone twoToneColor='#e0730d' /></span></div>\n                <div className='re-list'>\n                    {\n                        listData.length ? (\n                            listData.map((item, index) => <p onClick={() => navigate(`/article/${item.id}`)} key={index}>\n                                <span  className='re-content'>{index + 1} 、&nbsp; {item.title}</span>\n                                <span style={{marginLeft: '7px'}}><EyeTwoTone twoToneColor='#858585' /></span>\n                                <span style={{marginLeft: '7px'}}>{item.viewCount}</span>\n                            </p>)\n                        ) : null\n                    }\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default Recommend\n","import React, { useState, useEffect } from 'react'\nimport { Card, Divider, Tag } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { EyeOutlined, TagOutlined, CommentOutlined, StarOutlined } from '@ant-design/icons';\nimport { calcCommentsCount } from '../../utils'\nimport './index.less'\n/**\n * 文章卡片\n*/\nfunction ArticleCard(props) {\n  const { articleInfo } = props;\n  const [tagList, setTagList] = useState([]);\n  const [content, setContent] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(()=>{\n    console.log(props)\n    // let { content } = props.articleInfo;\n    let { content, tagList } = articleInfo;\n    content = removeHTMLTags(content);\n    setContent(content);\n    setTagList(JSON.parse(tagList));\n  }, [props.articleInfo.id]);\n\n  // 去除文本中的标签内容\n  const removeHTMLTags = (text) => {\n    return text.replace(/<[^>]*>?/gm, '');\n  }\n\n  return (\n    <Card style={{ margin: '16px auto' }} onClick={() => navigate(`/article/${articleInfo.id}`)}>\n      <div className='card-main'>\n        <div className='card-title'>{articleInfo.title}</div>\n        <Divider></Divider>\n        <div className='card-content'>{content}</div>\n        <Divider></Divider>\n        <div className='card-footer'>\n          <div className='viewCount'>\n            <div>\n              <EyeOutlined style={{ margin: '0 7px 0 0' }}/>\n              {articleInfo.viewCount}\n            </div>\n            <div>\n              <CommentOutlined style={{ margin: '0 3px 0 7px' }} />\n              <span> {calcCommentsCount(articleInfo.comments)}</span>\n            </div>\n            <div>\n              <StarOutlined style={{ margin: '0 3px 0 7px' }} />\n              <span>{articleInfo.collectionCount}</span>\n            </div>\n          </div>\n          <Divider type='vertical' style={{ marginRight: 7 }} />\n          <div className='viewCount'>\n            <TagOutlined style={{ marginRight: 7 }}/>\n            {tagList.map((item) => {\n              return (<Tag color=\"#2db7f5\" key={item}>{item}</Tag>)\n            })}\n          </div>\n          <Divider type='vertical' style={{ marginRight: 7 }} />\n          <div className='timeAndAuthor'>\n            <div className='createAt'>{'发布时间：' + articleInfo.createdAt}</div>    \n            <div>{'作者：' + articleInfo.author}</div>\n          </div>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default ArticleCard\n","import React, { useEffect, useState } from 'react'\nimport { List, Space, message, Input } from 'antd';\nimport Header from '../../components/header';\nimport ArticleCard from '../../components/ArticleCard'\nimport { request } from '../../utils/request';\nimport { useSelector } from 'react-redux';\nimport './index.less'\nimport Recommend from '../../components/Recommend';\nimport useBus from '../../hooks/useBus';\n\nconst { Search } = Input;\nconst socket = new WebSocket('ws://127.0.0.1:9998');\n\nexport default function Home() {\n    const [change, setChange] = useState(false);\n    const [listData, setData] = useState([]);\n    const [recommendArticleListData, setRecommendArticleList] = useState([]);\n    const [pageNum, setPageNum] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    const userInfo = useSelector(state => state.user);\n    const bus = useBus();\n\n    useEffect(() => {\n        initSocket();\n        Promise.allSettled([getRecommendArticleList(), getArticleList()])\n        .then(() => console.log('加载数据完成'))\n        .catch((err) => console.error(err));\n    }, []);\n\n    const initSocket = () => {\n        socket.onopen = () => {\n            console.log(\"服务器链接成功\");\n            socket.send(JSON.stringify({toName: userInfo.username}));\n        };\n        // 接收到消息的回调\n        socket.onmessage = (res) => {\n            bus.emit('getNotice', JSON.parse(res.data));\n        }\n        // 连接发生错误的回调\n        socket.onerror = (err) => {\n            console.error('socket错误:' + err);\n        }\n        // 关闭的回调\n        socket.onclose = () => {\n            console.log('socket已关闭');\n        }\n    }\n\n    //  获取文章列表\n    const getArticleList = async (pageNum = 1, pageSize = 10, keyword = '') => {\n        let obj = {pageNum, pageSize, keyword};\n        try {\n            const res = await request('/getArticleList', { data: obj });\n            console.log(res?.data.rows);\n            if (res?.data.rows) {\n                setData([...res?.data.rows]);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    //  获取今日推荐文章列表\n    const getRecommendArticleList = async (pageNum = 1, pageSize = 10, keyword = '') => {\n        let obj = {pageNum, pageSize, keyword};\n        try {\n            const res = await request('/getRecommendArticleList', { data: obj });\n            if (res?.data.rows) {\n                setRecommendArticleList(res?.data.rows);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const handlePressEnter = () => {\n        getArticleList(1, 10, keyword);\n    }\n\n    return (\n        <div className='home_content'>\n            <Header />\n            <div className='home_under_content'>\n                <div className='home_left_content'>\n                    <Recommend articleList={recommendArticleListData}></Recommend>\n                </div>\n                <div className='home_right_content'>\n                    <div className='home_search'>\n                        <Search\n                            placeholder=\"请输入文章标题\"\n                            enterButton\n                            onChange={(e) => setKeyword(e.target.value)}\n                            value={keyword}\n                            onPressEnter={handlePressEnter}\n                            onSearch={handlePressEnter}\n                            style={{ width: '50%' }} \n                        />\n                    </div>\n                    <div className='home_list'>\n                        <List\n                            dataSource={listData}\n                            renderItem={item => (\n                                <List.Item>\n                                    <ArticleCard articleInfo={item}></ArticleCard>\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","\nimport { COLOR_LIST } from '../config'\n\n// 获取 url query 参数\nexport const decodeQuery = url => {\n  const params = {}\n  const paramsStr = url.replace(/\\.*\\?/, '') // a=1&b=2&c=&d=xxx&e\n  paramsStr.split('&').forEach(v => {\n    const d = v.split('=')\n    if (d[1] && d[0]) params[d[0]] = d[1]\n  })\n  return params\n}\n\n// 计算 评论数\nexport const calcCommentsCount = commentList => {\n  if (!commentList) return 0;\n  let count = commentList.length;\n  commentList.forEach(item => {\n    count += item?.replies.length;\n  });\n  return count;\n}\n\n// 取数组中的随机数\nexport const randomIndex = arr => Math.floor(Math.random() * arr.length)\n\n/**\n * 对数组进行分组\n * @param {Array} arr - 分组对象\n * @param {Function} f\n * @returns 数组分组后的新数组\n */\nexport const groupBy = (arr, f) => {\n  const groups = {}\n  arr.forEach(item => {\n    const group = JSON.stringify(f(item))\n    groups[group] = groups[group] || []\n    groups[group].push(item)\n  })\n  return Object.keys(groups).map(group => groups[group])\n}\n\n/**\n * @param {string} path\n * @returns {Boolean}\n */\nexport function isExternal(path) {\n  return /^(https?:|mailto:|tel:|http:)/.test(path)\n}\n\n// 获取 token\n// export function getToken() {\n//   let token = ''\n//   const userInfo = get('userInfo')\n\n//   if (userInfo && userInfo.token) {\n//     token = 'Bearer ' + userInfo.token\n//   }\n\n//   return token\n// }\n\n/**\n * 生成随机 ID\n * @param {Number} len - 长度\n */\nexport function RandomId(len) {\n  return Math.random()\n    .toString(36)\n    .substr(3, len)\n}\n\n/**\n * debounce\n */\nexport function debounce(func, wait) {\n  let timer = null\n  return function() {\n    const context = this\n    const args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function() {\n      func.apply(context, args)\n    }, wait)\n  }\n}\n\n// 生成 color\nexport function genertorColor(list = [], colorList = COLOR_LIST) {\n  const _list = [...list]\n  _list.forEach((l, i) => {\n    l.color = colorList[i] || colorList[randomIndex(colorList)]\n  })\n  return _list\n}\n"],"names":["props","listData","setData","useState","navigate","useNavigate","useEffect","articleList","_jsx","Card","style","margin","children","_jsxs","className","marginLeft","FireTwoTone","twoToneColor","length","map","item","index","onClick","id","title","EyeTwoTone","viewCount","articleInfo","tagList","setTagList","content","setContent","console","log","removeHTMLTags","JSON","parse","text","replace","Divider","EyeOutlined","CommentOutlined","calcCommentsCount","comments","StarOutlined","collectionCount","type","marginRight","TagOutlined","Tag","color","createdAt","author","Search","Input","socket","WebSocket","Home","change","setChange","recommendArticleListData","setRecommendArticleList","pageNum","setPageNum","keyword","setKeyword","userInfo","useSelector","state","user","bus","useBus","initSocket","Promise","allSettled","getRecommendArticleList","getArticleList","then","catch","err","error","onopen","send","stringify","toName","username","onmessage","res","emit","data","onerror","onclose","async","obj","arguments","undefined","pageSize","request","rows","handlePressEnter","Header","Recommend","placeholder","enterButton","onChange","e","target","value","onPressEnter","onSearch","width","List","dataSource","renderItem","Item","ArticleCard","commentList","count","forEach","replies"],"sourceRoot":""}