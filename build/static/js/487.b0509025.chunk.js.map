{"version":3,"file":"static/js/487.b0509025.chunk.js","mappings":"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","sources":["page/three/index7.js"],"sourcesContent":["import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min'\n\n\nimport React, { useState, useEffect } from 'react'\nimport { Button, Card, Divider, Tag } from 'antd'\nimport { request } from '../../utils/request';\n\nimport './index.less'\n/**\n * three.js\n*/\nfunction THREETEST(props) {\n    //   创建场景\n    const scene = new THREE.Scene();\n\n    //  创建相机\n    const camera = new THREE.PerspectiveCamera(\n        45, //  值越大，视角越大\n        window.innerWidth / window.innerHeight, //  相机宽高比\n        0.1,    //  进平面\n        1000    //  远平面\n    );\n\n    //  创建渲染器\n    const renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n\n    //  创建物体\n    const cube1 = new THREE.Mesh(\n        new THREE.SphereGeometry(1, 20, 20),\n        new THREE.MeshStandardMaterial()\n    )  \n    cube1.castShadow = true; \n    const cube2 = new THREE.Mesh(\n        new THREE.PlaneGeometry(10, 10),\n        new THREE.MeshStandardMaterial()\n    )  \n    cube2.receiveShadow = true;\n    cube2.position.set(0, -1, 0);\n    cube2.rotation.x = -Math.PI / 2;\n\n    const cube3 = new THREE.Mesh(\n        new THREE.SphereGeometry(0.1, 20, 20),\n        new THREE.MeshBasicMaterial({\n            color: 0xff0000,\n        })\n    )  \n    cube3.position.set(2, 2, 2);\n\n    //  灯光阴影\n    //  1、材质要满足能对灯光有反应\n    //  2、设置渲染器开启阴影的计算 renderer.shadowMap.enabled = true\n    //  3、设置光照投射阴影 directionalLight.castShadow = true\n    //  4、设置物体投影阴影 cube.castShadow = true\n    //  5、设置平面物体（地面）接受阴影 cube2.receiveShadow = true\n\n    //  环境光\n    const light = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(light);\n    //  直线光源\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n\n    //  聚光灯\n    const spotLight = new THREE.SpotLight(0xffffff, 1);\n    spotLight.position.set(5, 5, 5);\n    spotLight.castShadow = true;\n    spotLight.shadow.radius = 20;   //  阴影模糊度\n    spotLight.shadow.mapSize.set(2048, 2048);   //阴影模糊度像素\n    spotLight.target = cube1;   //  目标物体\n    spotLight.angle = Math.PI / 6;  //  光源角度\n    spotLight.distance = 20;    //  距离\n    spotLight.intensity = 2;    //  亮度\n    spotLight.decay = 0;    //  亮度衰减程度\n    spotLight.shadow.camera.near = 0.5;\n    spotLight.shadow.camera.far = 500;\n    spotLight.shadow.camera.fov = 30;\n\n    //  点光源\n    const pointLight = new THREE.PointLight(0xff0000, 1);\n    // pointLight.position.set(5, 5, 5);\n    pointLight.castShadow = true;\n    pointLight.shadow.radius = 20;   //  阴影模糊度\n    pointLight.shadow.mapSize.set(2048, 2048);   //阴影模糊度像素\n    pointLight.decay = 0;\n    cube3.add(pointLight); \n\n    //  设置时钟\n    const clock = new THREE.Clock();\n\n    //  设置阴影贴图模糊度\n    directionalLight.shadow.radius = 20;\n    //  设置阴影贴图的分辨率\n    directionalLight.shadow.mapSize.set(2048, 2048);\n    //  设置平行光投射相机的属性\n    directionalLight.shadow.camera.near = 0.5;\n    directionalLight.shadow.camera.far = 500;\n    directionalLight.shadow.camera.top = 5;\n    directionalLight.shadow.camera.bottom = -5;\n    directionalLight.shadow.camera.left = -5;\n    directionalLight.shadow.camera.right = 5;\n\n\n    //  添加世界坐标辅助器  红色X轴 绿色Y轴  蓝色Z轴\n    const axesHelper = new THREE.AxesHelper(5);\n\n    //  添加轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    //  创建gui\n    const gui = new GUI();\n\n    useEffect(() => {\n        renderer.setSize(window.innerWidth, window.innerHeight);  //  设置屏幕的宽高\n        document.body.appendChild(renderer.domElement);\n\n        // 将网格添加到场景中\n        scene.add(cube1);\n        scene.add(cube2);\n        scene.add(cube3);\n       \n        // scene.add(pointLight);\n        // scene.add(directionalLight);\n\n        // 设置相机位置\n        camera.position.z = 15;\n        camera.position.y = 2;\n        camera.position.x = 2;\n        camera.lookAt(0, 0, 0);\n\n        scene.add(axesHelper);\n\n        //  添加带阻尼的惯性\n        controls.enableDamping = true;\n        //  设置阻尼系数\n        controls.dampingFactor = 0.05;\n\n        //  渲染\n        function animate() {\n            let time = clock.getElapsedTime()\n            cube3.position.x = Math.sin(time) * 3;\n            cube3.position.z = Math.cos(time) * 3;\n            cube3.position.y = 2 +  Math.sin(time *10) / 2;\n            controls.update();\n            requestAnimationFrame(animate);\n            //  旋转\n            // cube.rotation.x += 0.01;\n            // cube.rotation.y += 0.01;\n            renderer.render(scene, camera);\n        }\n        animate();\n\n        // gui.add(directionalLight.shadow, 'mapSize')\n\n        window.addEventListener('resize', function () {\n            renderer.setSize(window.innerWidth, window.innerHeight);    //  重置渲染器宽高\n            camera.aspect = window.innerWidth / window.innerHeight  //  重置相机宽高比\n            camera.updateProjectionMatrix() //  更新相机投影矩阵\n        });\n       \n    }, [])\n\n    return (\n        <div>\n            <div className='three'>\n\n            </div>\n        </div>\n    )\n}\n\nexport default THREETEST\n\n\n\nfunction getDomFromPage(nodeName) {\n    return new Promise((res) => {\n        let node = null;\n        let timer = setInterval(() => {\n            if (node) {\n                clearInterval(timer);\n                res(node);\n            } else {\n                node = document.body.getElementsByClassName(nodeName);\n            }\n        }, 50);\n    })\n}"],"names":["props","scene","THREE","camera","window","innerWidth","innerHeight","renderer","shadowMap","enabled","cube1","castShadow","cube2","receiveShadow","position","set","rotation","x","Math","PI","cube3","color","light","add","directionalLight","spotLight","shadow","radius","mapSize","target","angle","distance","intensity","decay","near","far","fov","pointLight","clock","top","bottom","left","right","axesHelper","controls","OrbitControls","domElement","GUI","useEffect","setSize","document","body","appendChild","z","y","lookAt","enableDamping","dampingFactor","animate","time","getElapsedTime","sin","cos","update","requestAnimationFrame","render","addEventListener","aspect","updateProjectionMatrix","_jsx","children","className"],"sourceRoot":""}