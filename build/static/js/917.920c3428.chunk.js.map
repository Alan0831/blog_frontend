{"version":3,"file":"static/js/917.920c3428.chunk.js","mappings":"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","sources":["components/MyArticle/index.js","components/MyInfo/index.js","components/Notice/index.js","components/changePassword/index.js","components/Collection/index.js","page/help/index.js","utils/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Space, message } from 'antd'\nimport { request } from '../../utils/request';\nimport { useNavigate } from 'react-router-dom';\nimport { calcCommentsCount } from '../../utils'\nimport './index.less'\n/**\n * 我的文章管理\n*/\nfunction MyArticle(props) {\n    const [userId, setUserId] = useState(props.userInfo.userId);\n    const [dataList, setData] = useState([]);\n    const navigate = useNavigate();\n    useEffect(() => {\n        getMyArticleList();\n    }, [props.userInfo.userId])\n\n    const getMyArticleList = async () => {\n        let res = await request('/getArticleList', {data: {userId}});\n        if(res.status === 200) {\n            setData(res.data.rows);\n        } else {\n            message.error(res.errorMessage);\n        }\n    }\n\n    const deleteArticle = async (id) => {\n        let res = await request('/deleteArticle', {data: {articleId: id}});\n        if(res.status === 200) {\n            message.success('删除成功！');\n            getMyArticleList();\n        } else {\n            message.error(res.errorMessage);\n        }\n    }\n\n    const columns = [\n        {\n            title: '标题',\n            dataIndex: 'title',\n            key: 'title',\n            align: 'center',\n        },\n        {\n            title: '点赞数',\n            dataIndex: 'goodCount',\n            key: 'goodCount',\n            align: 'center',\n        },\n        {\n            title: '点击数',\n            dataIndex: 'viewCount',\n            key: 'viewCount',\n            align: 'center',\n        },\n        {\n            title: '评论数',\n            dataIndex: 'comments',\n            key: 'comments',\n            align: 'center',\n            render: (text) => (\n                <span>{calcCommentsCount(text)}</span>\n            ),\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            align: 'center',\n        },\n        {\n            title: '更新时间',\n            dataIndex: 'updatedAt',\n            key: 'updatedAt',\n            align: 'center',\n        },\n        {\n            title: '操作',\n            key: 'id',\n            dataIndex: 'id',\n            align: 'center',\n            render: (text) => (\n                <Space size=\"middle\">\n                    <a onClick={() => navigate('/writeArticle', { state: { editArticleId: text } })} >编辑</a>\n                    <a onClick={() => deleteArticle(text)}>删除</a>\n                </Space>\n            ),\n        },\n    ]\n\n    return (\n        <div className='help-article'>\n            <Table\n                columns={columns}\n                dataSource={dataList}\n                rowKey={record => record.id}\n            />\n        </div>\n    )\n}\n\nexport default MyArticle\n","import React, { useState, useEffect } from 'react'\nimport { Input, Form, message, Button } from 'antd'\nimport { request } from '../../utils/request';\nimport { useDispatch } from 'react-redux';\nimport { edit } from '../../redux/user/actions'\nimport './index.less'\n/**\n * 我的信息\n*/\nfunction MyInfo(props) {\n    const { userId, username, email, description } = props.userInfo;\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        form.setFieldsValue({\n            username: username,\n            email: email,\n            description: description,\n        })\n    }, [props.userInfo.userId])\n\n    const submit = async (value) => {\n        console.log(value)\n        let obj = {\n            userId,\n            email: value.email,\n            description: value.description,\n        };\n        let res = await request('/updateUser', { data: obj });\n        if (res.status == 200) {\n            message.success('修改成功');\n            dispatch(edit(value));\n        } else {\n            message.error(res.errorMessage);\n        }\n    }\n\n    const formItemLayout = {\n        labelCol: {\n            span: 4,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }\n\n    return (\n        <div className='help-article'>\n            <Form\n                {...formItemLayout}\n                name=\"normal_login\"\n                form={form}\n                onFinish={submit}\n            >\n                <Form.Item\n                    label='用户名'\n                    name=\"username\"\n                >\n                    <Input\n                        disabled\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item\n                    label='邮箱'\n                    name=\"email\"\n                >\n                    <Input\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item\n                    label='个人简介'\n                    name=\"description\"\n                >\n                    <Input\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item\n                    style={{ textAlign: 'center' }}\n                >\n                    <Button type='primary' htmlType=\"submit\">保存</Button>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default MyInfo\n","import React, { useState, useEffect } from 'react';\r\nimport { List, Spin, message } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { request } from '../../utils/request';\r\nimport './index.less'\r\n\r\n/**\r\n * 回复我的\r\n*/\r\nfunction Notice(props) {\r\n    const { userId, username, email, description } = props.userInfo;\r\n    const [commentData, setCommentData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getCommentDataList();\r\n    }, [])\r\n\r\n    //  获取回复列表\r\n    const getCommentDataList = async () => {\r\n        let res = await request('/getNotice', {data: { userId }});\r\n        if(res.status === 200) {\r\n            setCommentData(res.data.rows);\r\n            setLoading(false);\r\n        } else {\r\n            message.error(res.errorMessage);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    //  跳转并更新回复状态\r\n    const updateNotice = async (item)=> {\r\n        // 如果是未读，则更新为已读状态\r\n        if (item.read === 0) {\r\n            await request('/updateNotice', {data: { id: item.id }});\r\n        }\r\n        navigate(`/article/${item.articleId}`);\r\n    }\r\n\r\n    return (\r\n        <Spin tip='加载中...' spinning={loading}>\r\n            <div className='my_notice'>\r\n                <List\r\n                    header={<div>回复列表</div>}\r\n                    bordered\r\n                    dataSource={commentData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <div className='comment_outer' onClick={() => updateNotice(item)}>\r\n                                <div className='comment_middle'>\r\n                                    <div className='comment_time'>{`[${item.createdAt}]`}</div>\r\n                                    <div className='comment_content'>{`${item.fromName}:  ${item.content}`}</div>\r\n                                </div>\r\n                                <div className={item.read === 0 ? 'comment_noread' : 'comment_hadnoread'}>{item.read === 0 ? '未读' : '已读'}</div>\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default Notice\r\n","import React, { useState, useEffect } from 'react'\nimport { Input, Form, message, Button } from 'antd'\nimport { request } from '../../utils/request';\n\nimport './index.less'\n/**\n * 修改密码\n*/\nfunction ChangePassword(props) {\n    const [userId, setUserId] = useState(props.userInfo.userId);\n    const [form] = Form.useForm();\n    useEffect(() => {\n\n    }, [])\n\n    const submit = async (value) => {\n        console.log(value)\n        let obj = {\n            password: value.oldPassword,\n            newPassword: value.newPassword,\n            userId\n        }\n        let res = await request('/changePassword', { data: obj });\n        if (res.status == 200) {\n            message.success('修改成功');\n            form.resetFields();\n        } else {\n            form.resetFields();\n            message.error(res.errorMessage);\n        }\n    }\n\n    const formItemLayout = {\n        labelCol: {\n            span: 4,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }\n\n    return (\n        <div className='help-article'>\n            <Form\n                {...formItemLayout}\n                name=\"normal_login\"\n                form={form}\n                onFinish={submit}\n            >\n                <Form.Item\n                    label='原密码'\n                    name=\"oldPassword\"\n                    rules={[\n                        {required: true, message: '请输入原密码'}\n                    ]}\n                >\n                    <Input\n                        type='password'\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item\n                    label='新密码'\n                    name=\"newPassword\"\n                    rules={[\n                        {required: true, message: '请输入原密码'}\n                    ]}\n                >\n                    <Input\n                        type='password'\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item label='确认密码' name=\"confirm\" rules={[{ required: true, message: '请确认密码' },\n                ({ getFieldValue }) => ({\n                    validator(_, value) {\n                        if (!value || getFieldValue('newPassword') === value) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject(new Error('两次密码输入不一致!'));\n                    },\n                }),\n                ]}>\n                    <Input\n                        type='password'\n                        className='title-input'\n                    />\n                </Form.Item>\n                <Form.Item\n                    style={{ textAlign: 'center' }}\n                >\n                    <Button type='primary' htmlType=\"submit\">提交</Button>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default ChangePassword\n","import React, { useState, useEffect } from 'react';\r\nimport { List, Spin, message, Popconfirm  } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { request } from '../../utils/request';\r\nimport { StarTwoTone } from '@ant-design/icons';\r\nimport './index.less'\r\n\r\n/**\r\n * 我的收藏\r\n*/\r\nfunction Collection(props) {\r\n    const { userId } = props.userInfo;\r\n    const [collectionList, setCollectionList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getCommentDataList();\r\n    }, [])\r\n\r\n    //  获取收藏列表\r\n    const getCommentDataList = async () => {\r\n        let res = await request('/searchCollection', {data: { owner: userId }});\r\n        if(res.status === 200) {\r\n            setCollectionList(res.data.rows);\r\n            setLoading(false);\r\n        } else {\r\n            message.error(res.errorMessage);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    //  跳转至文章\r\n    const goToAticle = async (item) => {\r\n        navigate(`/article/${item.articleId}`);\r\n    }\r\n\r\n    // 取消收藏\r\n    const cancelCollection= async (articleId, e) => {\r\n        console.log(articleId);\r\n        console.log(e);\r\n        \r\n        try {\r\n            let data = {\r\n                collectionArticleId: parseInt(articleId),\r\n                owner: parseInt(userId),\r\n            }\r\n            await request('/deleteCollection', {data});\r\n            message.success('取消收藏成功');\r\n            getCommentDataList();\r\n        } catch (err) {\r\n            message.error('取消收藏失败:' + err );\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Spin tip='加载中...' spinning={loading}>\r\n            <div className='my_notice'>\r\n                <List\r\n                    header={<div>收藏列表</div>}\r\n                    bordered\r\n                    dataSource={collectionList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <div className='collection_outer' onClick={() => goToAticle(item)}>\r\n                                <div className='collection_middle'>\r\n                                    <div className='collection_title'>{`${item.article.title}`}</div>\r\n                                    <div className='collection_author'>{`--------------------【作者:${item.article.author}】`}</div>\r\n                                </div>\r\n                                <div onClick={(e) => e.stopPropagation()}>\r\n                                    <Popconfirm title=\"确认取消收藏该文章吗?\" okText=\"是\" cancelText=\"否\" onConfirm={() => cancelCollection(item.articleId)}>\r\n                                        <StarTwoTone twoToneColor=\"#e0730d\" style={{ margin: '0 2px 0 5px' }} />\r\n                                    </Popconfirm>\r\n                                </div>\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default Collection\r\n","import React, { useState, useEffect } from 'react';\nimport './index.less';\nimport { useNavigate } from 'react-router-dom';\nimport { Tabs, Button } from 'antd';\nimport MyArticle from '../../components/MyArticle';\nimport MyInfo from '../../components/MyInfo';\nimport Notice from '../../components/Notice';\nimport ChangePassword from '../../components/changePassword';\nimport Collection from '../../components/Collection';\nimport { useSelector } from 'react-redux';\nimport { FileTextOutlined, IdcardOutlined, KeyOutlined, NotificationOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { useLocation } from 'react-router-dom';\n/**\n * 帮助中心\n*/\nfunction Help() {\n    const userInfo = useSelector(state => state.user);\n    const [active, setActive] = useState('1');\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        console.log(location.state.key)\n        setActive(location.state.key || '1');\n    }, [location.state])\n\n    const items = [\n        {\n            label: (<div><FileTextOutlined />我的文章</div>),\n            key: '1',\n            children: <MyArticle userInfo={userInfo}></MyArticle>,\n        },\n        {\n            label: (<div><IdcardOutlined />个人信息</div>),\n            key: '2',\n            children: <MyInfo userInfo={userInfo}></MyInfo>,\n        },\n        {\n            label: (<div><KeyOutlined />修改密码</div>),\n            key: '3',\n            children: <ChangePassword userInfo={userInfo}></ChangePassword>,\n        },\n        {\n            label: (<div><NotificationOutlined />回复我的</div>),\n            key: '4',\n            children: <Notice userInfo={userInfo}></Notice>,\n        },\n        {\n            label: (<div><PaperClipOutlined />我的收藏</div>),\n            key: '5',\n            children: <Collection userInfo={userInfo}></Collection>,\n        },\n    ]\n\n    return (\n        <div className='help'>\n            <Tabs\n                tabPosition='left'\n                items={items}\n                activeKey={active}\n                onChange={(active) => setActive(active)}\n            />\n            {/* <div className='back'>\n                <Button className='back-btn' type='goast' onClick={() => navigate('/')}>返回主页</Button>\n            </div> */}\n        </div>\n    )\n}\n\nexport default Help\n","\nimport { COLOR_LIST } from '../config'\n\n// 获取 url query 参数\nexport const decodeQuery = url => {\n  const params = {}\n  const paramsStr = url.replace(/\\.*\\?/, '') // a=1&b=2&c=&d=xxx&e\n  paramsStr.split('&').forEach(v => {\n    const d = v.split('=')\n    if (d[1] && d[0]) params[d[0]] = d[1]\n  })\n  return params\n}\n\n// 计算 评论数\nexport const calcCommentsCount = commentList => {\n  if (!commentList) return 0;\n  let count = commentList.length;\n  commentList.forEach(item => {\n    count += item?.replies.length;\n  });\n  return count;\n}\n\n// 取数组中的随机数\nexport const randomIndex = arr => Math.floor(Math.random() * arr.length)\n\n/**\n * 对数组进行分组\n * @param {Array} arr - 分组对象\n * @param {Function} f\n * @returns 数组分组后的新数组\n */\nexport const groupBy = (arr, f) => {\n  const groups = {}\n  arr.forEach(item => {\n    const group = JSON.stringify(f(item))\n    groups[group] = groups[group] || []\n    groups[group].push(item)\n  })\n  return Object.keys(groups).map(group => groups[group])\n}\n\n/**\n * @param {string} path\n * @returns {Boolean}\n */\nexport function isExternal(path) {\n  return /^(https?:|mailto:|tel:|http:)/.test(path)\n}\n\n// 获取 token\n// export function getToken() {\n//   let token = ''\n//   const userInfo = get('userInfo')\n\n//   if (userInfo && userInfo.token) {\n//     token = 'Bearer ' + userInfo.token\n//   }\n\n//   return token\n// }\n\n/**\n * 生成随机 ID\n * @param {Number} len - 长度\n */\nexport function RandomId(len) {\n  return Math.random()\n    .toString(36)\n    .substr(3, len)\n}\n\n/**\n * debounce\n */\nexport function debounce(func, wait) {\n  let timer = null\n  return function() {\n    const context = this\n    const args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function() {\n      func.apply(context, args)\n    }, wait)\n  }\n}\n\n// 生成 color\nexport function genertorColor(list = [], colorList = COLOR_LIST) {\n  const _list = [...list]\n  _list.forEach((l, i) => {\n    l.color = colorList[i] || colorList[randomIndex(colorList)]\n  })\n  return _list\n}\n"],"names":["props","userId","setUserId","useState","userInfo","dataList","setData","navigate","useNavigate","useEffect","getMyArticleList","async","res","request","data","status","rows","message","error","errorMessage","columns","title","dataIndex","key","align","render","text","_jsx","children","calcCommentsCount","_jsxs","Space","size","onClick","state","editArticleId","articleId","id","success","deleteArticle","className","Table","dataSource","rowKey","record","username","email","description","form","Form","useForm","dispatch","useDispatch","setFieldsValue","labelCol","span","wrapperCol","name","onFinish","console","log","value","obj","edit","Item","label","Input","disabled","style","textAlign","Button","type","htmlType","commentData","setCommentData","loading","setLoading","getCommentDataList","Spin","tip","spinning","List","header","bordered","renderItem","item","read","updateNotice","createdAt","fromName","content","password","oldPassword","newPassword","resetFields","rules","required","_ref","getFieldValue","validator","_","Promise","reject","Error","resolve","collectionList","setCollectionList","owner","goToAticle","article","author","e","stopPropagation","Popconfirm","okText","cancelText","onConfirm","collectionArticleId","parseInt","err","cancelCollection","StarTwoTone","twoToneColor","margin","useSelector","user","active","setActive","location","useLocation","items","FileTextOutlined","MyArticle","IdcardOutlined","MyInfo","KeyOutlined","ChangePassword","NotificationOutlined","Notice","PaperClipOutlined","Collection","Tabs","tabPosition","activeKey","onChange","commentList","count","length","forEach","replies"],"sourceRoot":""}